<UserControl x:Class="TestingReport.UCReportViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TestingReport"
             xmlns:loc="clr-namespace:GUI_Testing_Automation;assembly=GUI_Testing_Automation"
             xmlns:my="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
   <UserControl.Resources>
      <my:Double x:Key="font_size">14</my:Double>
      <my:Double x:Key="title_font_size">18</my:Double>
      <my:Double x:Key="item_height">40</my:Double>
      <SolidColorBrush x:Key="folder_bg_color" Color="#f1f1f1"></SolidColorBrush>
      <SolidColorBrush x:Key="module_bg_color" Color="#e6f9ff"></SolidColorBrush>
      <Thickness x:Key="my_margin">0</Thickness>
      <Thickness x:Key="title_margin">0</Thickness>
      <Thickness x:Key="icon_margin">8</Thickness>
      <Thickness x:Key="row_margin">8</Thickness>
      <Thickness x:Key="left_margin">5,0,0,0</Thickness>
      <my:Double x:Key="rect_width">4</my:Double>

      <Style TargetType="TreeViewItem">
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type TreeViewItem}">
                  <Grid>
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="0" Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                     </Grid.ColumnDefinitions>
                     <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                     </Grid.RowDefinitions>
                     <StackPanel Background="Transparent"></StackPanel>
                     <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.Style>
                           <Style TargetType="{x:Type ToggleButton}">
                              <Setter Property="Background" Value="Transparent"/>
                              <Setter Property="Template">
                                 <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                       <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                          <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                       </Border>
                                    </ControlTemplate>
                                 </Setter.Value>
                              </Setter>
                              <Style.Triggers>
                                 <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent"/>
                                 </Trigger>
                              </Style.Triggers>
                           </Style>
                        </ToggleButton.Style>
                        <Image Name="arrow_icon" Height="20" Width="20" Source="Resources/arrow_down.png"></Image>
                     </ToggleButton>
                     <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="2" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                     </Border>
                     <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                  </Grid>
                  <ControlTemplate.Triggers>
                     <Trigger Property="IsExpanded" Value="false">
                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        <Setter Property="Source" TargetName="arrow_icon" Value="Resources/arrow_forward.png"/>
                     </Trigger>
                     <Trigger Property="IsExpanded" Value="true">
                        <Setter Property="Source" TargetName="arrow_icon" Value="Resources/arrow_down.png"/>
                     </Trigger>
                     <Trigger Property="HasItems" Value="false">
                        <!--<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>-->
                        <Setter Property="Height" TargetName="arrow_icon" Value="0"/>
                        <Setter Property="Width" TargetName="arrow_icon" Value="0"/>
                     </Trigger>
                     <Trigger Property="IsSelected" Value="true">
                        <Setter Property="Background" TargetName="Bd" Value="White"/>
                        <!--{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                     </Trigger>
                     <MultiTrigger>
                        <MultiTrigger.Conditions>
                           <Condition Property="IsSelected" Value="true"/>
                           <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                     </MultiTrigger>
                     <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                     </Trigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>

      </Style>
      <Style TargetType="TextBox" x:Key="text_box_style">
         <Setter Property="BorderThickness" Value="0"/>
         <Setter Property="FontSize" Value="{StaticResource font_size}"/>
         <Setter Property="Margin" Value="{StaticResource row_margin}"/>
         <Setter Property="Background" Value="{Binding BgColor}"/>
         <Setter Property="IsReadOnly" Value="True"/>
         <Setter Property="TextWrapping" Value="Wrap"/>
         <Style.Triggers>
            <DataTrigger Binding="{Binding Status}" Value="Success">
               <Setter Property="TextElement.Foreground" Value="Green" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="Error">
               <Setter Property="TextElement.Foreground" Value="White" />
               <Setter Property="FontWeight" Value="SemiBold" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="Failure">
               <Setter Property="TextElement.Foreground" Value="White" />
               <Setter Property="FontWeight" Value="SemiBold" />
            </DataTrigger>
         </Style.Triggers>
      </Style>
      <Style TargetType="Button" x:Key="button_img_style">
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type Button}">
                  <Border Background="{TemplateBinding Background}" BorderThickness="0">
                     <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                  </Border>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
         <Style.Triggers>
            <DataTrigger Binding="{Binding AbsoluteImgPath}" Value="{x:Null}">
               <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
               <Setter Property="Background" Value="Transparent"/>
            </Trigger>
         </Style.Triggers>
      </Style>
      <Style TargetType="Border" x:Key="border_style">
         <Setter Property="BorderBrush" Value="LightGray"/>
         <Setter Property="BorderThickness" Value="1"/>
      </Style>
   </UserControl.Resources>
   <Grid>
        <TreeView Name="tvMain" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" ScrollViewer.CanContentScroll="True">
         <TreeView.Resources>
            <HierarchicalDataTemplate DataType="{x:Type loc:TestingFolderReport}" ItemsSource="{Binding Path=Children}">
               <Border Height="{StaticResource item_height}" Style="{StaticResource border_style}" Background="{StaticResource folder_bg_color}" 
                  Margin="{StaticResource my_margin}">
                  <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                     <!--<Image Name="arrow_icon"></Image>-->
                     <Rectangle Width="{StaticResource rect_width}" Height="Auto" Fill="{Binding Path=StateColor}"></Rectangle>
                     <Image Source="Resources/folder_1.png" Margin="{StaticResource icon_margin}"></Image>
                     <TextBlock Text="{Binding Path=Name}" Margin="{StaticResource left_margin}" FontWeight="Bold" Foreground="Black"
                         FontSize="{StaticResource title_font_size}" VerticalAlignment="Center"></TextBlock>
                  </StackPanel>
               </Border>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate DataType="{x:Type loc:TestingModuleReport}">
               <Expander IsExpanded="True" Loaded="expander_Loaded">
                  <Expander.Header>
                     <Border Style="{StaticResource border_style}" Height="{StaticResource item_height}" Background="{StaticResource module_bg_color}"
                      Margin="{StaticResource my_margin}" >
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                           <Rectangle Width="{StaticResource rect_width}" Fill="{Binding Path=StateColor}"></Rectangle>
                           <Image Source="Resources/play_folder2.png" Margin="{StaticResource icon_margin}"></Image>
                           <TextBlock Margin="{StaticResource left_margin}" Text="{Binding Path=Name}" FontSize="{StaticResource title_font_size}"
                             VerticalAlignment="Center"></TextBlock>
                           <!--<Rectangle Fill="Red"></Rectangle>-->
                        </StackPanel>
                     </Border>
                  </Expander.Header>
                  <DataGrid BorderThickness="0" Name="dgActions" IsReadOnly="True" Margin="30,5,10,5" AutoGenerateColumns="False" 
                      GridLinesVisibility="None" CanUserSortColumns="False" CanUserReorderColumns="False" IsHitTestVisible="False"
                      ItemsSource="{Binding Path=ListActionReport}" RowDetailsVisibilityMode="Collapsed" RowHeaderWidth="0">
                     <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                           <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                     </DataGrid.ColumnHeaderStyle>
                     <DataGrid.RowHeaderStyle>
                        <Style TargetType="{x:Type DataGridRowHeader}">
                           <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                     </DataGrid.RowHeaderStyle>
                     <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                           <Style.Triggers>
                              <Trigger Property="IsSelected" Value="True">
                                 <Setter Property="BorderBrush" Value="Blue" />
                                 <Setter Property="BorderThickness" Value="0" />
                              </Trigger>
                              <DataTrigger Binding="{Binding Status}" Value="Failure">
                                 <Setter Property="Background" Value="Red"></Setter>
                                 <Setter Property="Foreground" Value="White"></Setter>
                                 <Setter Property="Margin" Value="0,0,0,10"/>
                              </DataTrigger>
                              <DataTrigger Binding="{Binding Status}" Value="Error">
                                 <Setter Property="Background" Value="Red"></Setter>
                                 <Setter Property="Foreground" Value="White"></Setter>
                                 <Setter Property="Margin" Value="0,0,0,10"/>
                              </DataTrigger>
                              <DataTrigger Binding="{Binding Status}" Value="Success">
                                 <Setter Property="Background" Value="White"></Setter>
                                 <Setter Property="Foreground" Value="Green"></Setter>
                              </DataTrigger>
                           </Style.Triggers>
                        </Style>
                     </DataGrid.RowStyle>
                     <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                           <Style.Triggers>
                              <Trigger Property="IsSelected" Value="True">
                                 <Setter Property="Background" Value="Transparent" />
                                 <Setter Property="Foreground" Value="Black" />
                                 <Setter Property="BorderThickness" Value="0"/>
                              </Trigger>
                           </Style.Triggers>
                        </Style>
                     </DataGrid.CellStyle>
                     <DataGrid.Columns>
                        <DataGridTemplateColumn Width="100" Header="Category">
                           <DataGridTemplateColumn.CellTemplate>
                              <DataTemplate>
                                 <TextBox Style="{StaticResource text_box_style}" Text="{Binding Category,Mode=OneWay}"/>
                              </DataTemplate>
                           </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--<DataGridTextColumn Header="Category" Width="100" Binding="{Binding Category}" />-->
                        <DataGridTemplateColumn Width="100" Header="Status">
                           <DataGridTemplateColumn.CellTemplate>
                              <DataTemplate>
                                 <TextBox Style="{StaticResource text_box_style}" Text="{Binding Status,Mode=OneWay}"/>
                              </DataTemplate>
                           </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--<DataGridTextColumn Header="Status" Width="100" Binding="{Binding Status}" />-->
                        <DataGridTemplateColumn Width="450" Header="Message">
                           <DataGridTemplateColumn.CellTemplate>
                              <DataTemplate>
                                 <TextBox Style="{StaticResource text_box_style}" Text="{Binding Message,Mode=OneWay}">
                                 </TextBox>
                              </DataTemplate>
                           </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--<DataGridTextColumn Header="Message" Binding="{Binding Message}" />-->
                        <DataGridTemplateColumn Width="250" Header="Image">
                           <DataGridTemplateColumn.CellTemplate>
                              <DataTemplate>
                                 <Button Click="btnViewFullSizeImg_Click" Style="{StaticResource button_img_style}">
                                    <Image Source="{Binding AbsoluteImgPath,Mode=OneWay}" Stretch="Fill"/>
                                 </Button>
                              </DataTemplate>
                           </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                     </DataGrid.Columns>
                  </DataGrid>
               </Expander>
            </HierarchicalDataTemplate>
         </TreeView.Resources>
      </TreeView>
   </Grid>
</UserControl>
